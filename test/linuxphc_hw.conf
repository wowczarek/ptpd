; ######### ptpd 2.3.2-linuxphc configuration


; #### BEGIN Required settings - need changed

; Interface PTPd is running on
ptpengine:interface=changeme
; PTP domain number
ptpengine:domain=changeme

; #### END Required Settings

; Enable / disable hardware timestamping and hardware clock sync
ptpengine:hardware_timestamping=y

; #### BEGIN Basic PTP settings

; available presets: masteronly, slaveonly, masterslave
ptpengine:preset=slaveonly
; delay mechanism: E2E, P2P or DELAY_DISABLED
ptpengine:delay_mechanism=E2E
; other options: hybrid, unicast
ptpengine:ip_mode=multicast
; wait 15 seconds on master changes, let PTP offset stabilise
ptpengine:calibration_delay=15

; enable / disable unicast negotiation
; ptpengine:unicast_negotiation=n

; disable Best Master Clock Algorithm: should only be used
; for PTP master operation. Causes a PTPd master instance
; to skip the LISTENING state and transition straight to active,
; and never run the BMCA. This behaviour is part of the Telecom Profile.

; ptpengine:disable_bmca = n

; #### END Basic PTP settings

; #### BEGIN PTP message rates / intervals

; message intervals: 
;
; - values specified below are the defaults
; - for multicast, if using non-default rates, this only needs specified
;   on the master
; - for hybrid mode and unicast without negotiation, delay request interval
;   is not received from master, so needs configured on the slave
; - for unicast operation with unicast negotiation, this needs configured
;   both on master and on slave: master intervals are minimum intervals granted,
;   and the _max settings are maximum granted. Slave needs all intervals between
;   minimum and maximum, but if requested rates are too high,
;   slave will negotiate down
;
; PTP intervals are expressed as powers of 2, so 1 = once every 2 seconds,
; 0 = 1 per second, -1 = 2 per second, -2 = 4 per second, etc.

; message intervals (minimum intervals for PTP unicast negotiation master)

ptpengine:log_announce_interval = 1
ptpengine:log_sync_interval = 0
ptpengine:log_delayreq_interval = 0
; P2P only
ptpengine:log_peer_delayreq_interval = 1

; can be used in multicast mode to override master's interval
; ptpengine:log_delayreq_override = n

; maximum intervals for PTP unicast negotiation master
ptpengine:log_announce_interval_max = 5
ptpengine:log_sync_interval_max = 5
ptpengine:log_delayreq_interval_max = 5
; P2P only
ptpengine:log_peer_delayreq_interval_max = 5

; initial delayReq interval is the interval a multicast slave
; uses until it receives the first response and learns the actual
; interval used
ptpengine:log_delayreq_interval_initial = 0

; #### END PTP message rates

; #### BEGIN Filter configuration

; this is used in slave operation only

ptpengine:sync_outlier_filter_enable=y
ptpengine:sync_outlier_filter_autotune_enable=y
ptpengine:sync_stat_filter_enable=y
ptpengine:sync_outlier_filter_stepdetect_enable=y
ptpengine:sync_outlier_filter_stepdetect_threshold = 1000000
ptpengine:sync_outlier_filter_stepdetect_level = 200000
ptpengine:delay_outlier_filter_enable=y
ptpengine:delay_outlier_filter_autotune_enable=y
ptpengine:delay_stat_filter_enable=n
ptpengine:delay_outlier_filter_stepdetect_enable=y
ptpengine:delay_outlier_filter_stepdetect_threshold = 1000000
ptpengine:delay_outlier_filter_stepdetect_level = 200000

; #### END Filter Configuration

; #### BEGIN Clock stability estimates

; If a clock constantly fails to lock (LOCKED state), the low threshold may need lowered
; The current value can be observed in the status file

; Allan deviation estimates for LOCKED and TRACKING, hardware clocks
servo:adev_locked_threshold_low_hw = 50.000000
servo:adev_locked_threshold_high_hw = 500.000000

; Allan deviation estimates for LOCKED and TRACKING, software clocks (system clock)
servo:adev_locked_threshold_low = 200.000000
servo:adev_locked_threshold_high = 2000.000000

; Allan deviation measurement period
servo:adev_interval = 10

; #### END Clock stability estimates

; #### BEGIN additional clocks and clock options

; extra clocks - any additional clocks you want to sync
;clock:extra_clocks="linuxphc:ethX, linuxphc:ethY"

; preferred master clock name - all clocks will use this unless there
; is a PTP source available. When running PTPd as master, you can specify "syst"
; to drive the master NIC's clock from the system clock.

;clock:master_clock_name = "ethA"

; specify the names of any clocks you want to be read-only
;clock:readonly_clock_names="ethB"

; specify the names of any clocks you want to exclude from sync
;clock:excluded_clock_names="ethC"

; #### END additional clocks and clock options

; #### BEGIN Other settings

; panic mode: delay when clock step detected
ptpengine:panic_mode=y
ptpengine:panic_mode_duration=60

; alarm support
global:enable_alarms=y
global:alarm_initial_delay=60
global:alarm_timeout=30

; alarm when offset exceeds 100 us
ptpengine:offset_alarm_threshold=100000

; Enable outlier filter for sync between OS and hardware clocks,
; and sync between hardware clocks
clock:outlier_filter_enable = y

; do not allow a software clock (system clock) to be stepped backwards
clock:allow_step_backwards = y

; allow a hardware clock to be stepped backwards
; this should be set to Y because a NIC may randomly reset the clock
clock:allow_step_backwards_hw = y

; bind to selected CPU core for improved system latency characteristics
; core 0 = first core
global:cpuaffinity_cpucore = 0

; store best clock frequency in files
clock:store_frequency = y
; store frequency data in /etc
clock:frequency_directory = /etc

; log file location
global:log_file = /var/log/ptpd.log

; status file location
global:status_file = /var/run/ptpd.status

; PI servo parameters (gains)
; NOTE: If the system clock is steered by a hardware clock,
; software clock gains can be set to the same values as hardware clock gains.

; software clock (system clock) control - when controlled by PTP
; using software timestamping
; servo:kp = 0.1
; servo:ki = 0.001

; software clock (system clock) control - when syncing from a hardware clock
servo:kp = 0.7
servo:ki = 0.3

; hardware clock control
servo:kp_hardware = 0.7
servo:ki_hardware = 0.3

; #### END Other settings

; ######### ptpd 2.3.2-linuxphc configuration END

; always leave a newline in the end
